From doug.gregor at gmail.com  Tue Mar 25 15:25:15 2008
From: doug.gregor at gmail.com (Doug Gregor)
Date: Tue, 25 Mar 2008 11:25:15 -0400
Subject: C++0x: mangling of char16_t and char32_t
Message-ID: <24b520d20803250825p4b1e8d00gd383d5accdd6eda9@mail.gmail.com>

We don't have a mangling for the C++0x char16_t or char32_t types. It
has been suggested that we use 'k' for char16_t and 'q' for char32_t.
Does that seem reasonable?

  - Doug


From daveed at edg.com  Tue Mar 25 16:08:51 2008
From: daveed at edg.com (David Vandevoorde)
Date: Tue, 25 Mar 2008 12:08:51 -0400
Subject: [cxx-abi-dev] C++0x: mangling of char16_t and char32_t
In-Reply-To: <24b520d20803250825p4b1e8d00gd383d5accdd6eda9@mail.gmail.com>
References: <24b520d20803250825p4b1e8d00gd383d5accdd6eda9@mail.gmail.com>
Message-ID: <5EB91043-AB51-41C9-AE5B-E8D85E5D3499@edg.com>


On Mar 25, 2008, at 11:25 AM, Doug Gregor wrote:
> We don't have a mangling for the C++0x char16_t or char32_t types. It
> has been suggested that we use 'k' for char16_t and 'q' for char32_t.
> Does that seem reasonable?


Fine by me, although I'd prefer something a little more "mnemonical";  
maybe W2 and W4.

	Daveed



From michaelw at ca.ibm.com  Tue Mar 25 18:13:39 2008
From: michaelw at ca.ibm.com (Michael Wong)
Date: Tue, 25 Mar 2008 14:13:39 -0400
Subject: [cxx-abi-dev] C++0x: mangling of char16_t and char32_t
In-Reply-To: <5EB91043-AB51-41C9-AE5B-E8D85E5D3499@edg.com>
Message-ID: <OFB8AC2916.91FDC453-ON85257417.005DB15F-85257417.00642192@ca.ibm.com>

I would prefer if we hold off using q for now, as it is in a contentious
mode for one of the DFP manglings which I still have to discuss with other
C++ ABI members for an alternative:
Currently IBM and I think GNU (but in 4.3) uses these for name mangling of
DFP builtin types:
>>     Decimal32:          "p"
>>     Decimal64:          "q"
>>     Decimal128:         "r"
One of the issue is the same which is a wish for a more descriptive
mangling. Others include whether we really care about interoperability
given the different underlying representations, emulation modes vs hardware
modes issues.

So in summary, I would appreciate it if you would avoid this area until we
can settle this issue.

Michael Wong
XL C++ Compiler kernel Development
IBM Canada Ltd., C2/KD2/8200/MKM
8200 Warden Avenue
Markham, Ontario  L6G 1C7
W:905-413-3283 F:905-413-4839
Boost test results
http://www-1.ibm.com/support/docview.wss?rs=2239&context=SSJT9L&uid=swg27006911

C/C++ Compilers Support Page
http://www.ibm.com/software/awdtools/ccompilers/support/
C/C++ Feature Request Interface
http://www.ibm.com/support/docview.wss?uid=swg27005811
XL Fortran Compiler Support Page
http://www.ibm.com/software/awdtools/fortran/xlfortran/support/
XL Fortran Feature Request Interface
http://www.ibm.com/support/docview.wss?uid=swg27005812


                                                                           
             David Vandevoorde                                             
             <daveed at edg.com>                                              
                                                                        To 
             03/25/2008 12:08          Doug Gregor                         
             PM                        <doug.gregor at gmail.com>,            
                                       cxx-abi-dev at codesourcery.com        
                                                                        cc 
                                                                           
                                                                   Subject 
                                       Re: [cxx-abi-dev] C++0x: mangling   
                                       of char16_t and char32_t            
                                                                           
                                                                           
                                                                           
                                                                           
                                                                           
                                                                           





On Mar 25, 2008, at 11:25 AM, Doug Gregor wrote:
> We don't have a mangling for the C++0x char16_t or char32_t types. It
> has been suggested that we use 'k' for char16_t and 'q' for char32_t.
> Does that seem reasonable?


Fine by me, although I'd prefer something a little more "mnemonical";
maybe W2 and W4.

             Daveed





From doug.gregor at gmail.com  Tue Mar 25 18:38:07 2008
From: doug.gregor at gmail.com (Doug Gregor)
Date: Tue, 25 Mar 2008 14:38:07 -0400
Subject: [cxx-abi-dev] C++0x: mangling of char16_t and char32_t
In-Reply-To: <OFB8AC2916.91FDC453-ON85257417.005DB15F-85257417.00642192@ca.ibm.com>
References: <5EB91043-AB51-41C9-AE5B-E8D85E5D3499@edg.com>
	 <OFB8AC2916.91FDC453-ON85257417.005DB15F-85257417.00642192@ca.ibm.com>
Message-ID: <24b520d20803251138s6f1e37c7xe80b9557263a79ad@mail.gmail.com>

On Tue, Mar 25, 2008 at 2:13 PM, Michael Wong <michaelw at ca.ibm.com> wrote:
> I would prefer if we hold off using q for now, as it is in a contentious
>  mode for one of the DFP manglings which I still have to discuss with other
>  C++ ABI members for an alternative:
>  Currently IBM and I think GNU (but in 4.3) uses these for name mangling of
>  DFP builtin types:
>  >>     Decimal32:          "p"
>  >>     Decimal64:          "q"
>  >>     Decimal128:         "r"

Ah, I remember this discussion. I don't think GCC has a mangling for
these yet, but if IBM is already using 'q' then we need to be careful
here.

>  One of the issue is the same which is a wish for a more descriptive
>  mangling. Others include whether we really care about interoperability
>  given the different underlying representations, emulation modes vs hardware
>  modes issues.

It makes life easier for other tool vendors if name mangling is the
same across different compilers.

>  So in summary, I would appreciate it if you would avoid this area until we
>  can settle this issue.

GCC recently received a patch that adds support for char16_t and
char32_t, so that forces the issue a bit.

  - Doug


From michaelw at ca.ibm.com  Tue Mar 25 19:38:35 2008
From: michaelw at ca.ibm.com (Michael Wong)
Date: Tue, 25 Mar 2008 15:38:35 -0400
Subject: Discuss DFP mangling was(Re: [cxx-abi-dev] C++0x: mangling of char16_t and
 char32_t)
In-Reply-To: <24b520d20803251138s6f1e37c7xe80b9557263a79ad@mail.gmail.com>
Message-ID: <OFD1BA1DF5.55D21FEF-ON85257417.006A3229-85257417.006BE82F@ca.ibm.com>

May be its time to have the discussion I have been suggesting.

In the interest of resolving this quickly to help Doug out, I am soliciting
folks who are interested in this DFP name mangling discussion. Some folks
that I am aware of are:
Dennis Handley
Prem Rao
Daveed Vandevoorde
ON IBM's side I will add several of our implementors of DFP to ensure we
get a fair hearing of all the issues.
I would like someone who represents GNU, so may be that should be Mark, who
can also work as arbitrator in case we need it. But the folks who
integrated the DFP branch are likely from the IBM Linux Technology Centre.

I am proposing we have a phone call this week or next. Due to the
cross-coast nature, I would suggest it in the afternoon so West coast
(where Dennis is)  can join.
Lets say Thursday Mar 27, at 4-5 EST, or 1-2 PST. If this does not work, I
would propose next Monday, Mar 31 4-5 EST or 1-2 PST.
Can folks reply on their availability and I will set out a telecon number?
Thanks.

Michael Wong
XL C++ Compiler kernel Development
IBM Canada Ltd., C2/KD2/8200/MKM
8200 Warden Avenue
Markham, Ontario  L6G 1C7
W:905-413-3283 F:905-413-4839
Boost test results
http://www-1.ibm.com/support/docview.wss?rs=2239&context=SSJT9L&uid=swg27006911

C/C++ Compilers Support Page
http://www.ibm.com/software/awdtools/ccompilers/support/
C/C++ Feature Request Interface
http://www.ibm.com/support/docview.wss?uid=swg27005811
XL Fortran Compiler Support Page
http://www.ibm.com/software/awdtools/fortran/xlfortran/support/
XL Fortran Feature Request Interface
http://www.ibm.com/support/docview.wss?uid=swg27005812


                                                                           
             "Doug Gregor"                                                 
             <doug.gregor at gmai                                             
             l.com>                                                     To 
                                       Michael Wong/Toronto/IBM at IBMCA      
             03/25/2008 02:38                                           cc 
             PM                        cxx-abi-dev at codesourcery.com        
                                                                   Subject 
                                       Re: [cxx-abi-dev] C++0x: mangling   
                                       of char16_t and char32_t            
                                                                           
                                                                           
                                                                           
                                                                           
                                                                           
                                                                           




On Tue, Mar 25, 2008 at 2:13 PM, Michael Wong <michaelw at ca.ibm.com> wrote:
> I would prefer if we hold off using q for now, as it is in a contentious
>  mode for one of the DFP manglings which I still have to discuss with
other
>  C++ ABI members for an alternative:
>  Currently IBM and I think GNU (but in 4.3) uses these for name mangling
of
>  DFP builtin types:
>  >>     Decimal32:          "p"
>  >>     Decimal64:          "q"
>  >>     Decimal128:         "r"

Ah, I remember this discussion. I don't think GCC has a mangling for
these yet, but if IBM is already using 'q' then we need to be careful
here.

>  One of the issue is the same which is a wish for a more descriptive
>  mangling. Others include whether we really care about interoperability
>  given the different underlying representations, emulation modes vs
hardware
>  modes issues.

It makes life easier for other tool vendors if name mangling is the
same across different compilers.

>  So in summary, I would appreciate it if you would avoid this area until
we
>  can settle this issue.

GCC recently received a patch that adds support for char16_t and
char32_t, so that forces the issue a bit.

  - Doug




From daveed at edg.com  Tue Mar 25 20:21:52 2008
From: daveed at edg.com (David Vandevoorde)
Date: Tue, 25 Mar 2008 16:21:52 -0400
Subject: [cxx-abi-dev] Discuss DFP mangling was(Re: [cxx-abi-dev] C++0x: mangling of char16_t and char32_t)
In-Reply-To: <OFD1BA1DF5.55D21FEF-ON85257417.006A3229-85257417.006BE82F@ca.ibm.com>
References: <OFD1BA1DF5.55D21FEF-ON85257417.006A3229-85257417.006BE82F@ca.ibm.com>
Message-ID: <7C10B09F-C071-4D05-A5FB-75D4AD963F22@edg.com>


On Mar 25, 2008, at 3:38 PM, Michael Wong wrote:
[...]
> I am proposing we have a phone call this week or next. Due to the
> cross-coast nature, I would suggest it in the afternoon so West coast
> (where Dennis is)  can join.
> Lets say Thursday Mar 27, at 4-5 EST, or 1-2 PST. If this does not  
> work, I
> would propose next Monday, Mar 31 4-5 EST or 1-2 PST.
> Can folks reply on their availability and I will set out a telecon  
> number?


Thursday doesn't work for me.  Monday afternoon should be okay.

	Daveed



From dhandly at cup.hp.com  Wed Mar 26 02:29:40 2008
From: dhandly at cup.hp.com (Dennis Handly)
Date: Tue, 25 Mar 2008 19:29:40 -0700 (PDT)
Subject: [cxx-abi-dev] C++0x: mangling of char16_t and char32_t
Message-ID: <200803260229.TAA17821@hpcll183.cup.hp.com>

>From: "Doug Gregor" <doug.gregor at gmail.com>
>We don't have a mangling for the C++0x char16_t or char32_t types. It
>has been suggested that we use 'k' for char16_t and 'q' for char32_t.
>Does that seem reasonable?

I was thinking for HP-UX, char32_t would be the same as wchar_t.
If we need a mangling that treats it differently, we probably need to
add some rationale words saying why we have w, c, a, h and now k/q.

>From: David Vandevoorde <daveed at edg.com>
>Fine by me, although I'd prefer something a little more "mnemonical";  
>maybe W2 and W4.

I would think we would want to use something like W# just so we preserve
the one letter combinations.


From mark at codesourcery.com  Wed Mar 26 06:21:35 2008
From: mark at codesourcery.com (Mark Mitchell)
Date: Tue, 25 Mar 2008 23:21:35 -0700
Subject: [cxx-abi-dev] Discuss DFP mangling was(Re: [cxx-abi-dev] C++0x:
 mangling of char16_t and char32_t)
In-Reply-To: <7C10B09F-C071-4D05-A5FB-75D4AD963F22@edg.com>
References: <OFD1BA1DF5.55D21FEF-ON85257417.006A3229-85257417.006BE82F@ca.ibm.com> <7C10B09F-C071-4D05-A5FB-75D4AD963F22@edg.com>
Message-ID: <47E9EB6F.3090404@codesourcery.com>

David Vandevoorde wrote:

> Thursday doesn't work for me.  Monday afternoon should be okay.

Me too.  Although I'm not sure that I have anything terribly intelligent 
to say. :-)

-- 
Mark Mitchell
CodeSourcery
mark at codesourcery.com
(650) 331-3385 x713


From dhandly at cup.hp.com  Wed Mar 26 08:26:18 2008
From: dhandly at cup.hp.com (Dennis Handly)
Date: Wed, 26 Mar 2008 01:26:18 -0700 (PDT)
Subject: [cxx-abi-dev] Discuss DFP mangling was(Re: [cxx-abi-dev] C++0x: mangling of char16_t and char32_t)
Message-ID: <200803260826.BAA19659@hpcll183.cup.hp.com>

>From: Michael Wong <michaelw at ca.ibm.com>
>I would prefer if we hold off using q for now, as it is in a contentious
>mode for one of the DFP manglings which I still have to discuss with other
>C++ ABI members for an alternative:

Right, we kind of dropped the discussion.

>One of the issue is the same which is a wish for a more descriptive
>mangling.

Descriptive as in terms of the C++ template class name?  Or using Dx?

>So in summary, I would appreciate it if you would avoid this area until we
>can settle this issue.
Michael Wong

Seems reasonable.
Or for char16_t and char32_t can use two letters.

>From: "Doug Gregor" <doug.gregor at gmail.com>
>It makes life easier for other tool vendors if name mangling is the
>same across different compilers.

Right.  And if the demangling is unambiguous with very simple grammar,
FSM.

>GCC recently received a patch that adds support for char16_t and
>char32_t, so that forces the issue a bit.
  - Doug

Just a decision but not which chars?

>From: Michael Wong <michaelw at ca.ibm.com>
>I am soliciting folks who are interested in this DFP name mangling discussion.
>Some folks that I am aware of are:
>Dennis Handly, Prem Rao, Daveed Vandevoorde

I assume Prem and I will go along with what EDG does.
Provided the demangling doesn't need advanced AI technology.

>so may be that should be Mark, who can also work as arbitrator in case
>we need it.

Ok.  It seems Mark was feeling left out.  :-)

>I am proposing we have a phone call this week or next. Due to the
>cross-coast nature, I would suggest it in the afternoon so West coast
>(where Dennis is) can join.
>Lets say Thursday Mar 27, at 4-5 EST, or 1-2 PST.

It doesn't have to be 1 pm, I can get a little earlier, 11 am.
Prem and I have meetings at 12 PDT on Thu.

>If this does not work, I would propose next Monday, Mar 31 4-5 EST or
>1-2 PST.
>Can folks reply on their availability and I will set out a telecon number?
Michael Wong

That's fine for me but Prem has an issue.  I'm not sure if it is the day
or the time?

>From: David Vandevoorde <daveed at edg.com>
>Thursday doesn't work for me.  Monday afternoon should be okay.

>From: Mark Mitchell <mark at codesourcery.com>
>Although I'm not sure that I have anything terribly intelligent 
>to say. :-)

Well, at the Superbowl, they have VIPs to flip the coin.  ;-)
Michael also says you get to be the umpire.


From perry at ca.ibm.com  Wed Mar 26 14:08:05 2008
From: perry at ca.ibm.com (Sean Perry)
Date: Wed, 26 Mar 2008 10:08:05 -0400
Subject: [cxx-abi-dev] C++0x: mangling of char16_t and char32_t
In-Reply-To: <200803260229.TAA17821@hpcll183.cup.hp.com>
Message-ID: <OF1A7FF79B.4A037B35-ON85257418.004D781E-85257418.004DA5A8@ca.ibm.com>

What are the overload rules for char32_t and wchar_t?  If foo(char32_t) and
foo(wchar_t) are unique then you can't use the same mangling.
--
Sean Perry
Compiler Development
IBM Canada Lab
(905)-413-6031 (tie 313-6031), fax (905)-413-4839



                                                                           
             Dennis Handly                                                 
             <dhandly at cup.hp.c                                             
             om>                                                        To 
                                       cxx-abi-dev at codesourcery.com,       
             03/25/2008 10:29          doug.gregor at gmail.com               
             PM                                                         cc 
                                                                           
                                                                   Subject 
                                       Re:  [cxx-abi-dev] C++0x: mangling  
                                       of char16_t and char32_t            
                                                                           
                                                                           
                                                                           
                                                                           
                                                                           
                                                                           




>From: "Doug Gregor" <doug.gregor at gmail.com>
>We don't have a mangling for the C++0x char16_t or char32_t types. It
>has been suggested that we use 'k' for char16_t and 'q' for char32_t.
>Does that seem reasonable?

I was thinking for HP-UX, char32_t would be the same as wchar_t.
If we need a mangling that treats it differently, we probably need to
add some rationale words saying why we have w, c, a, h and now k/q.

>From: David Vandevoorde <daveed at edg.com>
>Fine by me, although I'd prefer something a little more "mnemonical";
>maybe W2 and W4.

I would think we would want to use something like W# just so we preserve
the one letter combinations.




From premanand.rao at hp.com  Wed Mar 26 14:33:16 2008
From: premanand.rao at hp.com (PremAnand M Rao)
Date: Wed, 26 Mar 2008 10:33:16 -0400
Subject: [cxx-abi-dev] C++0x: mangling of char16_t and char32_t
In-Reply-To: <OF1A7FF79B.4A037B35-ON85257418.004D781E-85257418.004DA5A8@ca.ibm.com>
References: <OF1A7FF79B.4A037B35-ON85257418.004D781E-85257418.004DA5A8@ca.ibm.com>
Message-ID: <47EA5EAC.9090505@hp.com>

My reading of 3.9.1 para 5 says that they are distinct types, even 
though the underlying representation for wchar_t might be the same as 
the underlying representation for one of char16_t or char32_t.  So they 
must be mangled differently.

PremAnand.

Sean Perry wrote:
> What are the overload rules for char32_t and wchar_t?  If foo(char32_t) and
> foo(wchar_t) are unique then you can't use the same mangling.
> --
> Sean Perry
> Compiler Development
> IBM Canada Lab
> (905)-413-6031 (tie 313-6031), fax (905)-413-4839
> 
> 
> 
> 
>              Dennis Handly
>              <dhandly at cup.hp.c
>              om>                                                        To
>                                        cxx-abi-dev at codesourcery.com,
>              03/25/2008 10:29          doug.gregor at gmail.com
>              PM                                                         cc
> 
>                                                                    Subject
>                                        Re:  [cxx-abi-dev] C++0x: mangling
>                                        of char16_t and char32_t
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
>> From: "Doug Gregor" <doug.gregor at gmail.com>
>> We don't have a mangling for the C++0x char16_t or char32_t types. It
>> has been suggested that we use 'k' for char16_t and 'q' for char32_t.
>> Does that seem reasonable?
> 
> I was thinking for HP-UX, char32_t would be the same as wchar_t.
> If we need a mangling that treats it differently, we probably need to
> add some rationale words saying why we have w, c, a, h and now k/q.
> 
>> From: David Vandevoorde <daveed at edg.com>
>> Fine by me, although I'd prefer something a little more "mnemonical";
>> maybe W2 and W4.
> 
> I would think we would want to use something like W# just so we preserve
> the one letter combinations.
> 
> 
> 


From premanand.rao at hp.com  Wed Mar 26 14:28:11 2008
From: premanand.rao at hp.com (PremAnand M Rao)
Date: Wed, 26 Mar 2008 10:28:11 -0400
Subject: [cxx-abi-dev] Discuss DFP mangling was(Re: [cxx-abi-dev] C++0x:
 mangling of char16_t and char32_t)
In-Reply-To: <200803260826.BAA19659@hpcll183.cup.hp.com>
References: <200803260826.BAA19659@hpcll183.cup.hp.com>
Message-ID: <47EA5D7B.3040404@hp.com>

Dennis Handly wrote:
>> Can folks reply on their availability and I will set out a telecon number?
> Michael Wong
> 
> That's fine for me but Prem has an issue.  I'm not sure if it is the day
> or the time?

If Monday works for everyone else, I can schedule around my Monday 
conflict.  Not a big deal.

PremAnand.


From daveed at edg.com  Wed Mar 26 13:24:58 2008
From: daveed at edg.com (David Vandevoorde)
Date: Wed, 26 Mar 2008 09:24:58 -0400
Subject: [cxx-abi-dev] C++0x: mangling of char16_t and char32_t
In-Reply-To: <200803260229.TAA17821@hpcll183.cup.hp.com>
References: <200803260229.TAA17821@hpcll183.cup.hp.com>
Message-ID: <24BED288-914E-47AB-8130-8FF006DFDC48@edg.com>


On Mar 25, 2008, at 10:29 PM, Dennis Handly wrote:
>> From: "Doug Gregor" <doug.gregor at gmail.com>
>> We don't have a mangling for the C++0x char16_t or char32_t types. It
>> has been suggested that we use 'k' for char16_t and 'q' for char32_t.
>> Does that seem reasonable?
>
> I was thinking for HP-UX, char32_t would be the same as wchar_t.


It can be the same type from a back end perspective, but in C++ you  
can overload based on those types:

	void f(wchar_t);   // (!)
	void f(char32_t);  // Different from (1)

So distinct encodings are needed.

	Daveed



From michaelw at ca.ibm.com  Wed Mar 26 20:40:45 2008
From: michaelw at ca.ibm.com (Michael Wong)
Date: Wed, 26 Mar 2008 16:40:45 -0400
Subject: [cxx-abi-dev] Discuss DFP mangling was(Re: [cxx-abi-dev] C++0x: mangling
 of char16_t and char32_t)
In-Reply-To: <47EA5D7B.3040404@hp.com>
Message-ID: <OF337F926D.CE98351E-ON85257418.007153B7-85257418.007198C9@ca.ibm.com>

Ok, it looks like Monday Mar 31 4-5 EDT works for all (we have switched to
daylight saving). I just want to make sure that means 1-2 in California.
Here is the call in information:
Moderator:                                          Mr. Michael Wong
Conference ID:                                      6754398
Local Dial-in number:                               416-343-2604
Toll-free Dial-in number:                           1 866-576-2504
Help desk:                                          1 877 549-3145
Customer care:                                      1 800 667-3678

Thanks to all for making this work.

Michael Wong
XL C++ Compiler kernel Development
IBM Canada Ltd., C2/KD2/8200/MKM
8200 Warden Avenue
Markham, Ontario  L6G 1C7
W:905-413-3283 F:905-413-4839
Boost test results
http://www-1.ibm.com/support/docview.wss?rs=2239&context=SSJT9L&uid=swg27006911

C/C++ Compilers Support Page
http://www.ibm.com/software/awdtools/ccompilers/support/
C/C++ Feature Request Interface
http://www.ibm.com/support/docview.wss?uid=swg27005811
XL Fortran Compiler Support Page
http://www.ibm.com/software/awdtools/fortran/xlfortran/support/
XL Fortran Feature Request Interface
http://www.ibm.com/support/docview.wss?uid=swg27005812

PremAnand M Rao <premanand.rao at hp.com> wrote on 03/26/2008 10:28:11 AM:

> Dennis Handly wrote:
> >> Can folks reply on their availability and I will set out a telecon
number?
> > Michael Wong
> >
> > That's fine for me but Prem has an issue.  I'm not sure if it is the
day
> > or the time?
>
> If Monday works for everyone else, I can schedule around my Monday
> conflict.  Not a big deal.
>
> PremAnand.



