From jason at redhat.com  Thu Dec 17 22:58:56 2009
From: jason at redhat.com (Jason Merrill)
Date: Thu, 17 Dec 2009 17:58:56 -0500
Subject: [cxx-abi-dev] mangling template-id
In-Reply-To: <4AFAFA8E.8030906@redhat.com>
References: <4AFAFA8E.8030906@redhat.com>
Message-ID: <4B2AB7B0.7050807@redhat.com>

On 11/11/2009 12:55 PM, Jason Merrill wrote:
> Currently there's no way in the ABI to mangle something like
> decltype(fn<args>()) because mangling is only specified for a qualified
> template-id.
>
> Handling this just as unqualified-name template-args seems to work fine;
> any reason not to just add that to expression? We also need to support a
> plain identifier for overloaded functions.

Here's a patch.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: abi-unqualified-expr.patch
Type: text/x-patch
Size: 820 bytes
Desc: not available
URL: <http://sourcerytools.com/pipermail/cxx-abi-dev/attachments/20091217/82b9c918/attachment.bin>

From jason at redhat.com  Fri Dec 18 00:09:58 2009
From: jason at redhat.com (Jason Merrill)
Date: Thu, 17 Dec 2009 19:09:58 -0500
Subject: [cxx-abi-dev] mangling template-id
In-Reply-To: <4B2AB7B0.7050807@redhat.com>
References: <4AFAFA8E.8030906@redhat.com> <4B2AB7B0.7050807@redhat.com>
Message-ID: <4B2AC856.6030802@redhat.com>

On 12/17/2009 05:58 PM, Jason Merrill wrote:
>> Handling this just as unqualified-name template-args seems to work fine;
>> any reason not to just add that to expression? We also need to support a
>> plain identifier for overloaded functions.

Hmm...where this runs into trouble is with operator names.  Where t is a 
function parameter, operator+(t,t) would mangle as clplfp_fp_E, which is 
ambiguous; it could also mean (t+t)().

So I guess we need something to distinguish an operator name used as a 
function name from an operator name used as an operator.

Jason


From jason at redhat.com  Tue Dec 22 05:20:09 2009
From: jason at redhat.com (Jason Merrill)
Date: Tue, 22 Dec 2009 00:20:09 -0500
Subject: [cxx-abi-dev] mangling template-id
In-Reply-To: <4B2AC856.6030802@redhat.com>
References: <4AFAFA8E.8030906@redhat.com> <4B2AB7B0.7050807@redhat.com> <4B2AC856.6030802@redhat.com>
Message-ID: <4B305709.7090801@redhat.com>

On 12/17/2009 07:09 PM, Jason Merrill wrote:
> On 12/17/2009 05:58 PM, Jason Merrill wrote:
>>> Handling this just as unqualified-name template-args seems to work fine;
>>> any reason not to just add that to expression? We also need to support a
>>> plain identifier for overloaded functions.
>
> Hmm...where this runs into trouble is with operator names. Where t is a
> function parameter, operator+(t,t) would mangle as clplfp_fp_E, which is
> ambiguous; it could also mean (t+t)().
>
> So I guess we need something to distinguish an operator name used as a
> function name from an operator name used as an operator.

New patch adds "on" (operator name) before an operator name used as an 
unqualified name.  It isn't necessary in . and -> expressions, since we 
already know that the second operand is a name.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: abi-dependent-name.patch
Type: text/x-patch
Size: 2628 bytes
Desc: not available
URL: <http://sourcerytools.com/pipermail/cxx-abi-dev/attachments/20091222/ee08a88a/attachment.bin>

