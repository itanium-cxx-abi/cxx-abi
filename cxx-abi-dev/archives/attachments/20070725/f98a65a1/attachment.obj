diff -u orig/abi-mangling.html ./abi-mangling.html
--- orig/abi-mangling.html	2007-07-25 14:50:49.000000000 -0400
+++ ./abi-mangling.html	2007-07-11 09:28:02.000000000 -0400
@@ -49,6 +49,9 @@
 <tr><td>oper</td> <td>d</td> <td> l </td> <td> Operator delete </td> </tr>
 <tr><td>oper</td> <td>d</td> <td> v </td> <td> Operator / </td> </tr>
 <tr><td>oper</td> <td>d</td> <td> V </td> <td> Operator /= </td> </tr>
+<tr><td>type</td> <td>D</td> <td> p </td> <td> pack expansion of (C++0x) </td> </tr>
+<tr><td>type</td> <td>D</td> <td> t </td> <td> decltype of an id-expression or class member access (C++0x) </td> </tr>
+<tr><td>type</td> <td>D</td> <td> T </td> <td> decltype of an expression (C++0x) </td> </tr>
 <tr><td>obj </td> <td>D</td> <td> 0 </td> <td> Deleting destructor</td> </tr>
 <tr><td>obj </td> <td>D</td> <td> 1 </td> <td> Complete object (in-charge) destructor</td> </tr>
 <tr><td>obj </td> <td>D</td> <td> 2 </td> <td> Base object (not-in-charge) destructor</td> </tr>
@@ -95,6 +98,7 @@
 <tr><td>oper</td> <td>o</td> <td> o </td> <td> Operator || </td> </tr>
 <tr><td>oper</td> <td>o</td> <td> r </td> <td> Operator | </td> </tr>
 <tr><td>oper</td> <td>o</td> <td> R </td> <td> Operator |= </td> </tr>
+<tr><td>type</td> <td>O</td> <td></td> <td> rvalue reference type (C++0x) </td> </tr>
 <tr><td>oper</td> <td>p</td> <td> l </td> <td> Operator + </td> </tr>
 <tr><td>oper</td> <td>p</td> <td> L </td> <td> Operator += </td> </tr>
 <tr><td>oper</td> <td>p</td> <td> m </td> <td> Operator ->* </td> </tr>
@@ -108,12 +112,14 @@
 <tr><td>oper</td> <td>r</td> <td> M </td> <td> Operator %= </td> </tr>
 <tr><td>oper</td> <td>r</td> <td> s </td> <td> Operator >> </td> </tr>
 <tr><td>oper</td> <td>r</td> <td> S </td> <td> Operator >>= </td> </tr>
-<tr><td>oper</td> <td>r</td> <td> z </td> <td> Operator sizeof </td> </tr>
 <tr><td>type</td> <td>R</td> <td></td> <td> reference type </td> </tr>
 <tr><td>type</td> <td>s</td> <td></td> <td> builtin type short </td> </tr>
 <tr><td>name</td> <td>s</td> <td></td> <td> local string prefix </td> </tr>
+<tr><td>oper</td> <td>s</td> <td> p </td> <td> Expression pack expansion operator</td> </tr>
 <tr><td>oper</td> <td>s</td> <td> r </td> <td> Scope resolution operator </td> </tr>
-<tr><td>oper</td> <td>s</td> <td> v </td> <td> Operator sizeof </td> </tr>
+<tr><td>oper</td> <td>s</td> <td> t </td> <td> Operator sizeof (a type)</td> </tr>
+<tr><td>oper</td> <td>s</td> <td> z </td> <td> Operator sizeof (an expression)</td> </tr>
+<tr><td>oper</td> <td>s</td> <td> Z </td> <td> Operator sizeof (a pack expansion)</td> </tr>
 <tr><td>abbr</td> <td>S</td> <td> _ </td> <td> substituted name </td> </tr>
 <tr><td>abbr</td> <td>S</td> <td> &lt;digit></td>
 <td> substituted name (repeated) </td> </tr>
diff -u orig/abi.html ./abi.html
--- orig/abi.html	2007-07-25 14:50:35.000000000 -0400
+++ ./abi.html	2007-07-25 15:12:45.000000000 -0400
@@ -3717,7 +3717,6 @@
 				   size_t* n,
 				   int* status);
 }
-
 </pre>
 </code>
 
@@ -4151,13 +4150,12 @@
   &lt;type&gt; ::= &lt;CV-qualifiers&gt; &lt;type&gt;
 	 ::= P &lt;type&gt;	# pointer-to
 	 ::= R &lt;type&gt;	# reference-to
-         ::= O &lt;type&gt;     # rvalue reference-to (C++0x)
+	 ::= O &lt;type&gt;	# rvalue reference-to (C++0x)
 	 ::= C &lt;type&gt;	# complex pair (C 2000)
 	 ::= G &lt;type&gt;	# imaginary (C 2000)
 	 ::= U &lt;source-name&gt; &lt;type&gt;	# vendor extended type qualifier
 
   &lt;CV-qualifiers&gt; ::= [r] [V] [K] 	# restrict (C99), volatile, const
-
 </pre></font></code>
 
 <p>
@@ -4213,6 +4211,19 @@
 This ABI does not specify that choice.
 </i>
 
+<p>
+C++0x pack expansions are prefixed with <code>Dp</code>. The
+C++0x <code>decltype</code> type is prefixed with
+either <code>Dt</code> or <code>DT</code>, depending on how
+the <code>decltype</code> type was parsed.
+
+<pre><font color="blue"><code>
+ &lt;type&gt;  ::= Dp &lt;type&gt;          # pack expansion of (C++0x)
+         ::= Dt &lt;expression&gt; E  # decltype of an id-expression or class member access (C++0x)
+         ::= DT &lt;expression&gt; E  # decltype of an expression (C++0x)
+</code></font></pre>
+
+
 <a name=mangling-builtin>
 <p>
 Builtin types are represented by single-letter codes:
@@ -4304,6 +4315,12 @@
 </pre></font></code>
 
 <p>
+When a function parameter is a C++0x function parameter pack, its type
+is mangled with <code>Dp &lt;type&gt;</code>, i.e., its type is a pack
+expansion.
+</p>
+
+<p>
 A class, union, or enum type is simply a name,
 It may be a simple &lt;unqualified-name>,
 with or without a template argument list,
@@ -4383,6 +4400,7 @@
   &lt;template-arg> ::= &lt;type>			# type or template
 		 ::= X &lt;expression> E		# expression
                  ::= &lt;expr-primary>             # simple expressions
+                 ::= sp &lt;expression&gt;            # pack expansion of (C++0x)
 
   &lt;expression> ::= &lt;<i>unary</i> operator-name> &lt;expression>
 	       ::= &lt;<i>binary</i> operator-name> &lt;expression> &lt;expression>
@@ -4391,6 +4409,7 @@
                ::= &lt;template-param>
                ::= sr &lt;type> &lt;unqualified-name>                   # dependent name
                ::= sr &lt;type> &lt;unqualified-name> &lt;template-args>   # dependent template-id
+               ::= sZ &lt;template-param&gt;                            # size of a parameter pack
 	       ::= &lt;expr-primary>
 
   &lt;expr-primary> ::= L &lt;type> &lt;<i>value</i> number> E                   # integer literal
@@ -4969,6 +4988,11 @@
 is simply a identifying number.</p>
 
 <p>
+<font color=blue>[072507]</font>
+Add mangling for variadic templates and decltype.
+</p>
+
+<p>
 <font color=blue>[071207]</font>
 Add mangling for rvalue references.
 </p>