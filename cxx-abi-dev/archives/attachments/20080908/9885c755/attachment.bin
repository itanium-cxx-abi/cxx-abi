*** abi.html.~2~	2008-09-08 14:10:05.000000000 -0400
--- abi.html	2008-09-08 14:31:56.000000000 -0400
*************** but also in types and scope identificati
*** 4370,4383 ****
  </p><pre><font color="blue"><code>
    &lt;template-args&gt; ::= I &lt;template-arg&gt;+ E
    &lt;template-arg&gt; ::= &lt;type&gt;			# type or template
! 		 ::= X &lt;expression&gt; E		# expression
                   ::= &lt;expr-primary&gt;             # simple expressions
                   ::= sp &lt;expression&gt;            # pack expansion of (C++0x)
  
    &lt;expression&gt; ::= &lt;<i>unary</i> operator-name&gt; &lt;expression&gt;
  	       ::= &lt;<i>binary</i> operator-name&gt; &lt;expression&gt; &lt;expression&gt;
  	       ::= &lt;<i>trinary</i> operator-name&gt; &lt;expression&gt; &lt;expression&gt; &lt;expression&gt;
!                ::= st &lt;type&gt;
                 ::= &lt;template-param&gt;
                 ::= sr &lt;type&gt; &lt;unqualified-name&gt;                   # dependent name
                 ::= sr &lt;type&gt; &lt;unqualified-name&gt; &lt;template-args&gt;   # dependent template-id
--- 4370,4387 ----
  </p><pre><font color="blue"><code>
    &lt;template-args&gt; ::= I &lt;template-arg&gt;+ E
    &lt;template-arg&gt; ::= &lt;type&gt;			# type or template
! 		 ::= X &lt;expression&gt; E	        # expression
                   ::= &lt;expr-primary&gt;             # simple expressions
+   		 ::= I &lt;template-arg&gt;+<sub>opt</sub> E     # argument pack
                   ::= sp &lt;expression&gt;            # pack expansion of (C++0x)
  
    &lt;expression&gt; ::= &lt;<i>unary</i> operator-name&gt; &lt;expression&gt;
  	       ::= &lt;<i>binary</i> operator-name&gt; &lt;expression&gt; &lt;expression&gt;
  	       ::= &lt;<i>trinary</i> operator-name&gt; &lt;expression&gt; &lt;expression&gt; &lt;expression&gt;
!                ::= cl &lt;expression&gt;+ E	        # call
!                ::= cv v                         # type()
!                ::= st &lt;type&gt;		        # sizeof
! 	       ::= sT &lt;type&gt;		        # function parameter of specified type
                 ::= &lt;template-param&gt;
                 ::= sr &lt;type&gt; &lt;unqualified-name&gt;                   # dependent name
                 ::= sr &lt;type&gt; &lt;unqualified-name&gt; &lt;template-args&gt;   # dependent template-id
*************** but also in types and scope identificati
*** 4386,4392 ****
  
    &lt;expr-primary&gt; ::= L &lt;type&gt; &lt;<i>value</i> number&gt; E                   # integer literal
                   ::= L &lt;type &lt;<i>value</i> float&gt; E                     # floating literal
!                  ::= L &lt;mangled-name&gt; E                           # external name
  
  </code></font></pre>
  
--- 4390,4396 ----
  
    &lt;expr-primary&gt; ::= L &lt;type&gt; &lt;<i>value</i> number&gt; E                   # integer literal
                   ::= L &lt;type &lt;<i>value</i> float&gt; E                     # floating literal
!                  ::= L &lt;mangled-name&gt; E                          # external name
  
  </code></font></pre>
  
*************** unwind table location.
*** 4951,4956 ****
--- 4955,4964 ----
  significance should be attached to the form of the revision number; it
  is simply a identifying number.</a></p>
  
+ <p><font color="blue">[080908]</font> Add manglings for forward references
+ to function parameter types, call expressions, and 0-argument functional
+ casts.  Change argument pack mangling.</p>
+ 
  <p>
  <a name="revisions"><font color="blue">[080707]</font>
  Add manglings for IEEE 754r decimal and half-precision floating point
*************** Selected first variant for empty base al
*** 5380,5383 ****
  </p><hr>
  
  
! </body></html>
\ No newline at end of file
--- 5388,5391 ----
  </p><hr>
  
  
! </body></html>
