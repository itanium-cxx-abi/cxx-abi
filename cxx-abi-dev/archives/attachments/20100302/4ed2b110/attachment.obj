*** nullptr_orig.html	Tue Mar  2 11:07:01 2010
--- nullptr.html	Tue Mar  2 11:17:37 2010
***************
*** 2011,2021 ****
  Basic type information (e.g. for "int", "bool", etc.)
  will be kept in the run-time support library.
  Specifically, the run-time support library
  should contain type_info objects for the types
  X, X* and X const*,
! for every X in: void, bool, wchar_t, char, unsigned char, signed char,
  short, unsigned short, int, unsigned int, long, unsigned long, long long,
  unsigned long long, float, double, long double, char16_t, char32_t,
  and the IEEE 754r decimal and half-precision floating point types.
  (Note that various other type_info objects for class types may reside
  in the run-time support library by virtue of the preceding rules,
--- 2011,2022 ----
  Basic type information (e.g. for "int", "bool", etc.)
  will be kept in the run-time support library.
  Specifically, the run-time support library
  should contain type_info objects for the types
  X, X* and X const*,
! for every X in: void, std::nulptr_t,
! bool, wchar_t, char, unsigned char, signed char,
  short, unsigned short, int, unsigned int, long, unsigned long, long long,
  unsigned long long, float, double, long double, char16_t, char32_t,
  and the IEEE 754r decimal and half-precision floating point types.
  (Note that various other type_info objects for class types may reside
  in the run-time support library by virtue of the preceding rules,
***************
*** 2167,2176 ****
--- 2168,2178 ----
  
  <p>
  The possible derived types are:
  <ul>
    <li> <code>abi::__fundamental_type_info</code> 
+   <li> <code>abi::__nullptr_type_info</code> 
    <li> <code>abi::__array_type_info</code> 
    <li> <code>abi::__function_type_info</code> 
    <li> <code>abi::__enum_type_info</code> 
    <li> <code>abi::__class_type_info</code> 
    <li> <code>abi::__si_class_type_info</code> 
***************
*** 2185,2194 ****
--- 2187,2201 ----
  <code>abi::__fundamental_type_info</code> adds no data members
  to <code>std::type_info</code>;
  
  <p>
  <li>
+ <code>abi::__nullptr_type_info</code> adds no data members
+ to <code>std::type_info</code>;
+ 
+ <p>
+ <li>
  <code>abi::__array_type_info</code> and
  <code>abi::__function_type_info</code> do not add data
  members to <code>std::type_info</code>
  (these types are only produced by the typeid operator;
  they decay in other contexts).&nbsp;&nbsp;
***************
*** 4319,4328 ****
--- 4326,4336 ----
                   ::= De # IEEE 754r decimal floating point (128 bits)
                   ::= Df # IEEE 754r decimal floating point (32 bits)
                   ::= Dh # IEEE 754r half-precision floating point (16 bits)
                   ::= Di # char32_t
                   ::= Ds # char16_t
+                  ::= Dn # std::nullptr_t (i.e., decltype(nullptr))
  		 ::= u &lt;source-name>	# vendor extended type
  
  </pre></font></code>
  
  <p>
