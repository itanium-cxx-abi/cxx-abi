*** ia64_abi_orig.html	Tue Mar 17 17:42:12 2009
--- ia64_abi_deleted_funcs.html	Thu May 28 16:24:58 2009
***************
*** 2780,2789 ****
--- 2780,2802 ----
  adjustment from an A* to a C*,
  and then transfers control to the non-adjusting entry point for C::f.
  </ol>
  
  <p>
+ There are some exceptions to this determination of function pointers:
+ <ul>
+ <li>If the member function is deleted, the corresponding virtual table
+ entry points to __cxa_deleted_virtual
+ (see <a href=#deleted-virtual>3.2.7 Deleted Virtual Function API</a>).
+ </li>
+ <li>If C::f is a pure virtual function, the corresponding virtual table
+ entry may point to __cxa_pure_virtual
+ (see <a href=#pure-virtual>3.2.6 Pure Virtual Function API</a>).
+ </li>
+ </ul>
+ 
+ <p>
  When a class is used as a virtual base,
  we add a vcall offset slot to the beginning of its virtual table for each of
  the virtual functions it provides,
  whether in its primary or secondary virtual tables.
  Derived classes which override these functions may use the slots to
***************
*** 2936,2945 ****
--- 2949,2975 ----
  but it is expected that it will terminate the program,
  possibly with an error message.
  
  
  <p>
+ <a name=deleted-virtual>
+ <h4> 3.2.7 Deleted Virtual Function API </h4>
+ 
+ <p>
+ An implementation shall provide a standard entry point that a compiler
+ will reference in virtual tables to indicated a deleted virtual
+ function.  Its interface is:
+ 
+ <code><pre>
+   extern "C" void __cxa_deleted_virtual ();
+ </pre></code>
+ 
+ <p>This routine may not return and while this ABI does not otherwise
+ specify its behavior, it is expected that it will terminate the program,
+ possibly with an error message.
+ 
+ <p>
  <a name=obj-ctor>
  <h3> 3.3 Construction and Destruction APIs </h3>
  </a>
  
  <p>
