Only in .: ._abi-mangling.html
diff -u orig/abi-mangling.html ./abi-mangling.html
--- orig/abi-mangling.html	2007-07-02 09:56:47.000000000 -0400
+++ ./abi-mangling.html	2007-07-02 11:31:29.000000000 -0400
@@ -49,6 +49,7 @@
 <tr><td>oper</td> <td>d</td> <td> l </td> <td> Operator delete </td> </tr>
 <tr><td>oper</td> <td>d</td> <td> v </td> <td> Operator / </td> </tr>
 <tr><td>oper</td> <td>d</td> <td> V </td> <td> Operator /= </td> </tr>
+<tr><td>type</td> <td>D</td> <td> p </td> <td> pack expansion of (C++0x) </td> </tr>
 <tr><td>obj </td> <td>D</td> <td> 0 </td> <td> Deleting destructor</td> </tr>
 <tr><td>obj </td> <td>D</td> <td> 1 </td> <td> Complete object (in-charge) destructor</td> </tr>
 <tr><td>obj </td> <td>D</td> <td> 2 </td> <td> Base object (not-in-charge) destructor</td> </tr>
@@ -95,6 +96,7 @@
 <tr><td>oper</td> <td>o</td> <td> o </td> <td> Operator || </td> </tr>
 <tr><td>oper</td> <td>o</td> <td> r </td> <td> Operator | </td> </tr>
 <tr><td>oper</td> <td>o</td> <td> R </td> <td> Operator |= </td> </tr>
+<tr><td>type</td> <td>O</td> <td></td> <td> rvalue reference type (C++0x) </td> </tr>
 <tr><td>oper</td> <td>p</td> <td> l </td> <td> Operator + </td> </tr>
 <tr><td>oper</td> <td>p</td> <td> L </td> <td> Operator += </td> </tr>
 <tr><td>oper</td> <td>p</td> <td> m </td> <td> Operator ->* </td> </tr>
@@ -108,12 +110,14 @@
 <tr><td>oper</td> <td>r</td> <td> M </td> <td> Operator %= </td> </tr>
 <tr><td>oper</td> <td>r</td> <td> s </td> <td> Operator >> </td> </tr>
 <tr><td>oper</td> <td>r</td> <td> S </td> <td> Operator >>= </td> </tr>
-<tr><td>oper</td> <td>r</td> <td> z </td> <td> Operator sizeof </td> </tr>
 <tr><td>type</td> <td>R</td> <td></td> <td> reference type </td> </tr>
 <tr><td>type</td> <td>s</td> <td></td> <td> builtin type short </td> </tr>
 <tr><td>name</td> <td>s</td> <td></td> <td> local string prefix </td> </tr>
+<tr><td>oper</td> <td>s</td> <td> p </td> <td> Expression pack expansion operator</td> </tr>
 <tr><td>oper</td> <td>s</td> <td> r </td> <td> Scope resolution operator </td> </tr>
-<tr><td>oper</td> <td>s</td> <td> v </td> <td> Operator sizeof </td> </tr>
+<tr><td>oper</td> <td>s</td> <td> t </td> <td> Operator sizeof (a type)</td> </tr>
+<tr><td>oper</td> <td>s</td> <td> z </td> <td> Operator sizeof (an expression)</td> </tr>
+<tr><td>oper</td> <td>s</td> <td> Z </td> <td> Operator sizeof (a pack expansion)</td> </tr>
 <tr><td>abbr</td> <td>S</td> <td> _ </td> <td> substituted name </td> </tr>
 <tr><td>abbr</td> <td>S</td> <td> &lt;digit></td>
 <td> substituted name (repeated) </td> </tr>
diff -u orig/abi.html ./abi.html
--- orig/abi.html	2007-07-02 09:43:46.000000000 -0400
+++ ./abi.html	2007-07-02 15:11:49.000000000 -0400
@@ -4144,7 +4144,8 @@
 
 <p>
 Types are qualified (optionally) by single-character prefixes encoding
-cv-qualifiers and/or pointer, reference, complex, or imaginary types:
+cv-qualifiers and/or pointer, reference, complex, or imaginary types. 
+C++0x pack expansions are qualified with <code>Dp</code>.
 
 <pre><font color=blue><code>
   &lt;type&gt; ::= &lt;CV-qualifiers&gt; &lt;type&gt;
@@ -4154,7 +4155,7 @@
 	 ::= C &lt;type&gt;	# complex pair (C 2000)
 	 ::= G &lt;type&gt;	# imaginary (C 2000)
 	 ::= U &lt;source-name&gt; &lt;type&gt;	# vendor extended type qualifier
-
+         ::= Dp &lt;type&gt;  # pack expansion of (C++0x)
   &lt;CV-qualifiers&gt; ::= [r] [V] [K] 	# restrict (C99), volatile, const
 
 </pre></font></code>
@@ -4303,6 +4304,12 @@
 </pre></font></code>
 
 <p>
+When a function parameter is a C++0x function parameter pack, its type
+is mangled with <code>Dp &lt;type&gt;</code>, i.e., its type is a pack
+expansion.
+</p>
+
+<p>
 A class, union, or enum type is simply a name,
 It may be a simple &lt;unqualified-name>,
 with or without a template argument list,
@@ -4382,6 +4389,7 @@
   &lt;template-arg> ::= &lt;type>			# type or template
 		 ::= X &lt;expression> E		# expression
                  ::= &lt;expr-primary>             # simple expressions
+                 ::= sp &lt;expression&gt;            # pack expansion of (C++0x)
 
   &lt;expression> ::= &lt;<i>unary</i> operator-name> &lt;expression>
 	       ::= &lt;<i>binary</i> operator-name> &lt;expression> &lt;expression>
@@ -4390,6 +4398,7 @@
                ::= &lt;template-param>
                ::= sr &lt;type> &lt;unqualified-name>                   # dependent name
                ::= sr &lt;type> &lt;unqualified-name> &lt;template-args>   # dependent template-id
+               ::= sZ &lt;template-param&gt;                            # size of a parameter pack
 	       ::= &lt;expr-primary>
 
   &lt;expr-primary> ::= L &lt;type> &lt;<i>value</i> number> E                   # integer literal
Only in .: orig
Only in .: patches