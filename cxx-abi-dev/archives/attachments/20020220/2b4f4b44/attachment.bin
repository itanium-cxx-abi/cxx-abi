*** abi.html.~9~	Tue Aug 14 15:25:50 2001
--- abi.html	Wed Feb 20 00:21:30 2002
*************** the dimension (but not the '_' separator
*** 4373,4380 ****
  When the dimension is an expression involving template parameters,
  the second production is used.
  Thus, the declarations:
! <pre><code>    template<int I> void foo (int (&)[I + 1]) { }
!     template void foo<2> (int (&)[3]);
  </code></pre>
  produce the mangled name "<code>_Z3fooILi2EEvRAplT_Li1E_i</code>".
  
--- 4373,4380 ----
  When the dimension is an expression involving template parameters,
  the second production is used.
  Thus, the declarations:
! <pre><code>    template&lt;int I&gt; void foo (int (&)[I + 1]) { }
!     template void foo&lt;2&gt; (int (&)[3]);
  </code></pre>
  produce the mangled name "<code>_Z3fooILi2EEvRAplT_Li1E_i</code>".
  
*************** Pointer-to-member types encode the class
*** 4385,4390 ****
--- 4385,4398 ----
    &lt;pointer-to-member-type> ::= M &lt;<i>class</i> type> &lt;<i>member</i> type>
  
  </pre></font></code>
+ <p>
+ Note that for a pointer to cv-qualified member function, the qualifiers are
+ attached to the function type, so
+ <pre><code>
+     struct A;
+     void f (void (A::*)() const) {}
+ </code></pre>
+ produces the mangled name "<code>_Z1fM1AKFvvE</code>".
  
  <p>
  When function and member function template instantiations reference
*************** unwind table location.
*** 5019,5024 ****
--- 5027,5036 ----
  <p> <hr> <p>
  
  <p>
+ <font color=blue>[020220]</font>
+ Clarify pointer to member function mangling (5.1.5).
+ 
+ <p>
  <font color=blue>[010407]</font>
  Don't assume that virtual functions can be called through intermediate bases.
  Add notes about missed opportunities.
