*** nullptr_orig.html	Tue Mar  2 11:07:01 2010
--- nullptr.html	Mon Mar 22 18:10:23 2010
***************
*** 2011,2024 ****
  Basic type information (e.g. for "int", "bool", etc.)
  will be kept in the run-time support library.
  Specifically, the run-time support library
  should contain type_info objects for the types
  X, X* and X const*,
! for every X in: void, bool, wchar_t, char, unsigned char, signed char,
  short, unsigned short, int, unsigned int, long, unsigned long, long long,
  unsigned long long, float, double, long double, char16_t, char32_t,
  and the IEEE 754r decimal and half-precision floating point types.
  (Note that various other type_info objects for class types may reside
  in the run-time support library by virtue of the preceding rules,
  e.g. that of <code>std::bad_alloc</code>.)
  
  
--- 2011,2029 ----
  Basic type information (e.g. for "int", "bool", etc.)
  will be kept in the run-time support library.
  Specifically, the run-time support library
  should contain type_info objects for the types
  X, X* and X const*,
! for every X in: void, std::nulptr_t,
! bool, wchar_t, char, unsigned char, signed char,
  short, unsigned short, int, unsigned int, long, unsigned long, long long,
  unsigned long long, float, double, long double, char16_t, char32_t,
  and the IEEE 754r decimal and half-precision floating point types.
+ Each of the type_info objects for X shall have type
+ <code>abi::__fundamental_type_info</code> (or a type derived therefrom),
+ whereas the objects corresponding to X* and X const* hal have type
+ <code>abi::__pointer_type_info</code> (or a type derived therefrom).
  (Note that various other type_info objects for class types may reside
  in the run-time support library by virtue of the preceding rules,
  e.g. that of <code>std::bad_alloc</code>.)
  
  
***************
*** 4319,4328 ****
--- 4324,4334 ----
                   ::= De # IEEE 754r decimal floating point (128 bits)
                   ::= Df # IEEE 754r decimal floating point (32 bits)
                   ::= Dh # IEEE 754r half-precision floating point (16 bits)
                   ::= Di # char32_t
                   ::= Ds # char16_t
+                  ::= Dn # std::nullptr_t (i.e., decltype(nullptr))
  		 ::= u &lt;source-name>	# vendor extended type
  
  </pre></font></code>
  
  <p>
