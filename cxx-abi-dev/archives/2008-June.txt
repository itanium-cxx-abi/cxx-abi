From scott.douglass at arm.com  Thu Jun  5 16:40:43 2008
From: scott.douglass at arm.com (scott douglass)
Date: Thu, 05 Jun 2008 17:40:43 +0100
Subject: IEEE 754r half-precision fp mangling?
Message-ID: <1212684043.9139.356.camel@pc982.cambridge.arm.com>

Hi,

Is there any proposal yet for the mangling of the proposed IEEE 754r
half-precision floating point type?

Thanks.  (and sorry for the earlier partial message)

-- 
IMPORTANT NOTICE: The contents of this email and any attachments are confidential and may also be privileged. If you are not the intended recipient, please notify the sender immediately and do not disclose the contents to any other person, use it for any purpose, or store or copy the information in any medium.  Thank you.




From mark at codesourcery.com  Thu Jun  5 16:57:14 2008
From: mark at codesourcery.com (Mark Mitchell)
Date: Thu, 05 Jun 2008 09:57:14 -0700
Subject: [cxx-abi-dev] IEEE 754r half-precision fp mangling?
In-Reply-To: <1212684043.9139.356.camel@pc982.cambridge.arm.com>
References: <1212684043.9139.356.camel@pc982.cambridge.arm.com>
Message-ID: <48481AEA.1010205@codesourcery.com>

scott douglass wrote:

> Is there any proposal yet for the mangling of the proposed IEEE 754r
> half-precision floating point type?

I don't believe so, no.  Do you have one? :-)

-- 
Mark Mitchell
CodeSourcery
mark at codesourcery.com
(650) 331-3385 x713


From scott.douglass at arm.com  Fri Jun  6 10:18:08 2008
From: scott.douglass at arm.com (scott douglass)
Date: Fri, 06 Jun 2008 11:18:08 +0100
Subject: [cxx-abi-dev] IEEE 754r half-precision fp mangling?
In-Reply-To: <48481AEA.1010205@codesourcery.com>
References: <1212684043.9139.356.camel@pc982.cambridge.arm.com> <48481AEA.1010205@codesourcery.com>
Message-ID: <1212747488.9139.394.camel@pc982.cambridge.arm.com>

On Thu, 2008-06-05 at 17:57, Mark Mitchell wrote:
> scott douglass wrote:
> 
> > Is there any proposal yet for the mangling of the proposed IEEE 754r
> > half-precision floating point type?
> 
> I don't believe so, no.  Do you have one? :-)

I'm not sure what the DFP mangling proposal is and it would be best if
half-precision floating point was consistent with DFP ... but here goes
anyway:

We seem to be running out of single lower case letter for types.  I
propose adding this to section 5.1.5

<type> ::= Eh # half-precision floating point (16bit)

My intention is that 'E' means extension or escape and allows a raft of
new encoding letters.


-- 
IMPORTANT NOTICE: The contents of this email and any attachments are confidential and may also be privileged. If you are not the intended recipient, please notify the sender immediately and do not disclose the contents to any other person, use it for any purpose, or store or copy the information in any medium.  Thank you.




From dhandly at cup.hp.com  Fri Jun  6 20:35:47 2008
From: dhandly at cup.hp.com (Dennis Handly)
Date: Fri, 6 Jun 2008 13:35:47 -0700 (PDT)
Subject: [cxx-abi-dev] IEEE 754r half-precision fp mangling?
Message-ID: <200806062035.NAA18318@hpcll183.cup.hp.com>

>From: scott douglass <scott.douglass at arm.com>
>I'm not sure what the DFP mangling proposal is and it would be best if
>half-precision floating point was consistent with DFP ... but here goes
>anyway:
>We seem to be running out of single lower case letter for types.  I
>propose adding this to section 5.1.5
><type> ::= Eh # half-precision floating point (16bit)

>My intention is that 'E' means extension or escape and allows a raft of
>new encoding letters.

I would suggest you just use "D".  I.e. save "E" for End as in most
other parts of the BNF.

Also, what good is "D", if there are only 3 Dec fp types. :-)
Might as well use all 26*2 combinations.  And the possible 10 numeric
ones (dtors).


From jason at redhat.com  Mon Jun  9 09:37:35 2008
From: jason at redhat.com (Jason Merrill)
Date: Mon, 09 Jun 2008 11:37:35 +0200
Subject: Initializer Lists
Message-ID: <484CF9DF.1060702@redhat.com>

The initializer list proposal

http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2640.pdf
http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2531.pdf 
(library changes only, the core changes are superceded by N2640)

involves some coordination between the compiler and the runtime library: 
the ABI needs to specify what interface the compiler uses to create a 
std::initializer_list<T>.

Past runtime library interfaces have used a "C" linkage function, but 
that doesn't really work for a template type, and any code that uses 
std::initializer_list must #include the <initializer_list> header first, 
so we don't have to worry about trying to synthesize the type inside the 
compiler.

I've been implementing this in g++, and currently have a private constructor

     initializer_list(const T* _a, size_t _l)

which the compiler invokes directly by suppressing access control over 
the call.

Any thoughts?

Jason


From jason at redhat.com  Mon Jun  9 09:18:34 2008
From: jason at redhat.com (Jason Merrill)
Date: Mon, 09 Jun 2008 11:18:34 +0200
Subject: [cxx-abi-dev] C++0x: mangling of char16_t and char32_t
In-Reply-To: <5EB91043-AB51-41C9-AE5B-E8D85E5D3499@edg.com>
References: <24b520d20803250825p4b1e8d00gd383d5accdd6eda9@mail.gmail.com> <5EB91043-AB51-41C9-AE5B-E8D85E5D3499@edg.com>
Message-ID: <484CF56A.8070408@redhat.com>

David Vandevoorde wrote:
> 
> On Mar 25, 2008, at 11:25 AM, Doug Gregor wrote:
>> We don't have a mangling for the C++0x char16_t or char32_t types. It
>> has been suggested that we use 'k' for char16_t and 'q' for char32_t.
>> Does that seem reasonable?
> 
> Fine by me, although I'd prefer something a little more "mnemonical"; 
> maybe W2 and W4.

It seems that this issue wasn't discussed in the DFP mangling meeting. 
I like Daveed's suggestion; anyone disagree?

Jason



From scott.douglass at arm.com  Mon Jun  9 08:32:20 2008
From: scott.douglass at arm.com (scott douglass)
Date: Mon, 09 Jun 2008 09:32:20 +0100
Subject: [cxx-abi-dev] IEEE 754r half-precision fp mangling?
In-Reply-To: <200806062035.NAA18318@hpcll183.cup.hp.com>
References: <200806062035.NAA18318@hpcll183.cup.hp.com>
Message-ID: <1213000340.9139.464.camel@pc982.cambridge.arm.com>

On Fri, 2008-06-06 at 21:35, Dennis Handly wrote:
> >From: scott douglass <scott.douglass at arm.com>
> >I'm not sure what the DFP mangling proposal is and it would be best if
> >half-precision floating point was consistent with DFP ... but here goes
> >anyway:
> >We seem to be running out of single lower case letter for types.  I
> >propose adding this to section 5.1.5
> ><type> ::= Eh # half-precision floating point (16bit)
> 
> >My intention is that 'E' means extension or escape and allows a raft of
> >new encoding letters.
> 
> I would suggest you just use "D".  I.e. save "E" for End as in most
> other parts of the BNF.

Thanks. I'm happy to use 'D<letter>' if there's already a precedent.

> Also, what good is "D", if there are only 3 Dec fp types. :-)
> Might as well use all 26*2 combinations.

What are the existing 'D<letter>' manglings?

If 'Dh' is available, I change my proposal to:

<type> ::= Dh # half-precision floating point (16bit)


-- 
IMPORTANT NOTICE: The contents of this email and any attachments are confidential and may also be privileged. If you are not the intended recipient, please notify the sender immediately and do not disclose the contents to any other person, use it for any purpose, or store or copy the information in any medium.  Thank you.




From mark at codesourcery.com  Mon Jun  9 21:30:59 2008
From: mark at codesourcery.com (Mark Mitchell)
Date: Mon, 09 Jun 2008 14:30:59 -0700
Subject: [cxx-abi-dev] IEEE 754r half-precision fp mangling?
In-Reply-To: <1213000340.9139.464.camel@pc982.cambridge.arm.com>
References: <200806062035.NAA18318@hpcll183.cup.hp.com> <1213000340.9139.464.camel@pc982.cambridge.arm.com>
Message-ID: <484DA113.20307@codesourcery.com>

scott douglass wrote:

>> I would suggest you just use "D".  I.e. save "E" for End as in most
>> other parts of the BNF.
> 
> Thanks. I'm happy to use 'D<letter>' if there's already a precedent.

I don't see any precedent there -- but I think we could do that.

> If 'Dh' is available, I change my proposal to:
> 
> <type> ::= Dh # half-precision floating point (16bit)

Here is another possible trick that we could use for both DFP and 
half-precision float...  Since we have:

		 ::= u <source-name>	# vendor extended type

and since a source name always starts with a decimal integer, we already 
have a piece of the encoding space reserved, given by the regular 
expression:

    u[a-zA-Z].+

So, we could use "uh" for half-precision float.  That's the same number 
of characters and avoids using any new encoding space?

-- 
Mark Mitchell
CodeSourcery
mark at codesourcery.com
(650) 331-3385 x713


From mark at codesourcery.com  Mon Jun  9 21:37:26 2008
From: mark at codesourcery.com (Mark Mitchell)
Date: Mon, 09 Jun 2008 14:37:26 -0700
Subject: [cxx-abi-dev] Initializer Lists
In-Reply-To: <484CF9DF.1060702@redhat.com>
References: <484CF9DF.1060702@redhat.com>
Message-ID: <484DA296.2030806@codesourcery.com>

Jason Merrill wrote:
> The initializer list proposal
> 
> http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2640.pdf
> http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2531.pdf 
> (library changes only, the core changes are superceded by N2640)

> I've been implementing this in g++, and currently have a private 
> constructor
> 
>     initializer_list(const T* _a, size_t _l)
> 
> which the compiler invokes directly by suppressing access control over 
> the call.

Sounds reasonable to me, FWIW.

-- 
Mark Mitchell
CodeSourcery
mark at codesourcery.com
(650) 331-3385 x713


From gdr at integrable-solutions.net  Mon Jun  9 23:40:26 2008
From: gdr at integrable-solutions.net (Gabriel Dos Reis)
Date: Mon, 9 Jun 2008 18:40:26 -0500
Subject: [cxx-abi-dev] Initializer Lists
In-Reply-To: <484CF9DF.1060702@redhat.com>
References: <484CF9DF.1060702@redhat.com>
Message-ID: <206fcf960806091640i485c2d89g93c4dd4915f66458@mail.gmail.com>

On Mon, Jun 9, 2008 at 4:37 AM, Jason Merrill <jason at redhat.com> wrote:
> The initializer list proposal
>
> http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2640.pdf
> http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2531.pdf (library
> changes only, the core changes are superceded by N2640)
>
> involves some coordination between the compiler and the runtime library: the
> ABI needs to specify what interface the compiler uses to create a
> std::initializer_list<T>.
>
> Past runtime library interfaces have used a "C" linkage function, but that
> doesn't really work for a template type, and any code that uses
> std::initializer_list must #include the <initializer_list> header first, so
> we don't have to worry about trying to synthesize the type inside the
> compiler.
>
> I've been implementing this in g++, and currently have a private constructor
>
>    initializer_list(const T* _a, size_t _l)
>
> which the compiler invokes directly by suppressing access control over the
> call.
>
> Any thoughts?
>
> Jason

What I had done was to directly create a struct object { const T*, size_t len }
and internally `reinterpret_cast' it to initializer_list<T> so the
creation was `magic'.
but I think your proposal is also good.

-- Gaby


From dhandly at cup.hp.com  Tue Jun 10 01:58:08 2008
From: dhandly at cup.hp.com (Dennis Handly)
Date: Mon, 9 Jun 2008 18:58:08 -0700 (PDT)
Subject: [cxx-abi-dev] C++0x: mangling of char16_t and char32_t
Message-ID: <200806100158.SAA02833@hpcll183.cup.hp.com>

>From: Jason Merrill <jason at redhat.com>
>David Vandevoorde wrote:
>> although I'd prefer something a little more "mnemonical"; 
>> maybe W2 and W4.

Only a few of the others are mnemonic, "i" for int, l, v, b, c, s, f, d.

>It seems that this issue wasn't discussed in the DFP mangling meeting. 
>I like Daveed's suggestion; anyone disagree?
Jason

My only suggestion is to use the "D" extension.
Possibly Dt and Dj from the corresponding unsigned short and unsigned int.


From dhandly at cup.hp.com  Tue Jun 10 02:16:18 2008
From: dhandly at cup.hp.com (Dennis Handly)
Date: Mon, 9 Jun 2008 19:16:18 -0700 (PDT)
Subject: [cxx-abi-dev] IEEE 754r half-precision fp mangling?
Message-ID: <200806100216.TAA02985@hpcll183.cup.hp.com>

>From: scott douglass <scott.douglass at arm.com>
>I'm happy to use 'D<letter>' if there's already a precedent.

Well, we talked about it for the 3 Dec FP types.
I just mentioned using it for the char16_t and char32_t.

>What are the existing 'D<letter>' manglings?

I think Df, De, Dr.
The only issue is that D0 D1 D2 are used for destructors so there is
some lookahead needed.

>If 'Dh' is available, I change my proposal to:
><type> ::= Dh # half-precision floating point (16bit)

Yes, Dh is free.

>From: Mark Mitchell <mark at codesourcery.com>
>I don't see any precedent there -- but I think we could do that.

Yes, using D, seems to give us 26*2 types.

>Here is another possible trick that we could use for both DFP and 
>half-precision float...  Since we have:
>So, we could use "uh" for half-precision float.  That's the same number 
>of characters and avoids using any new encoding space?
Mark Mitchell

It seems kind of hokey.  Almost as bad as my D[0-9] vs D[a-zA-Z] proposal.
And we can include those two char types.


From scott.douglass at arm.com  Wed Jun 11 07:48:35 2008
From: scott.douglass at arm.com (scott douglass)
Date: Wed, 11 Jun 2008 08:48:35 +0100
Subject: [cxx-abi-dev] IEEE 754r half-precision fp mangling?
In-Reply-To: <200806100216.TAA02985@hpcll183.cup.hp.com>
References: <200806100216.TAA02985@hpcll183.cup.hp.com>
Message-ID: <1213170514.32428.1922.camel@pc982.cambridge.arm.com>

On Tue, 2008-06-10 at 03:16, Dennis Handly wrote:
> >From: scott douglass <scott.douglass at arm.com>
> >I'm happy to use 'D<letter>' if there's already a precedent.
> 
> Well, we talked about it for the 3 Dec FP types.
> I just mentioned using it for the char16_t and char32_t.
> 
> >What are the existing 'D<letter>' manglings?
> 
> I think Df, De, Dr.
> The only issue is that D0 D1 D2 are used for destructors so there is
> some lookahead needed.
> 
> >If 'Dh' is available, I change my proposal to:
> ><type> ::= Dh # half-precision floating point (16bit)
> 
> Yes, Dh is free.
> 
> >From: Mark Mitchell <mark at codesourcery.com>
> >I don't see any precedent there -- but I think we could do that.
> 
> Yes, using D, seems to give us 26*2 types.
> 
> >Here is another possible trick that we could use for both DFP and 
> >half-precision float...  Since we have:
> >So, we could use "uh" for half-precision float.  That's the same number 
> >of characters and avoids using any new encoding space?
> Mark Mitchell
> 
> It seems kind of hokey.  Almost as bad as my D[0-9] vs D[a-zA-Z] proposal.
> And we can include those two char types.

If 'Df', 'De' and 'Dr' are already (nearly?) in use, I think 'Dh' is the
more reasonable choice.  Unless there are objections, we'll start using
that.  Or do you think the DFP types are going to switch to 'u<letter>'?


-- 
IMPORTANT NOTICE: The contents of this email and any attachments are confidential and may also be privileged. If you are not the intended recipient, please notify the sender immediately and do not disclose the contents to any other person, use it for any purpose, or store or copy the information in any medium.  Thank you.




From mark at codesourcery.com  Wed Jun 11 14:57:36 2008
From: mark at codesourcery.com (Mark Mitchell)
Date: Wed, 11 Jun 2008 07:57:36 -0700
Subject: [cxx-abi-dev] IEEE 754r half-precision fp mangling?
In-Reply-To: <1213170514.32428.1922.camel@pc982.cambridge.arm.com>
References: <200806100216.TAA02985@hpcll183.cup.hp.com> <1213170514.32428.1922.camel@pc982.cambridge.arm.com>
Message-ID: <484FE7E0.8070808@codesourcery.com>

scott douglass wrote:

> If 'Df', 'De' and 'Dr' are already (nearly?) in use, I think 'Dh' is the
> more reasonable choice.  Unless there are objections, we'll start using
> that.  Or do you think the DFP types are going to switch to 'u<letter>'?

No, let's just go with Dh; that seems simplest given where we are. 
Scott, would you be so kind as to send in changes to the HTML document 
to make that "official"?

Thanks,

-- 
Mark Mitchell
CodeSourcery
mark at codesourcery.com
(650) 331-3385 x713


From scott.douglass at arm.com  Wed Jun 11 15:24:41 2008
From: scott.douglass at arm.com (scott douglass)
Date: Wed, 11 Jun 2008 16:24:41 +0100
Subject: [cxx-abi-dev] IEEE 754r half-precision fp mangling?
In-Reply-To: <484FE7E0.8070808@codesourcery.com>
References: <200806100216.TAA02985@hpcll183.cup.hp.com> <1213170514.32428.1922.camel@pc982.cambridge.arm.com> <484FE7E0.8070808@codesourcery.com>
Message-ID: <1213197880.32428.2525.camel@pc982.cambridge.arm.com>

On Wed, 2008-06-11 at 15:57, Mark Mitchell wrote:
> scott douglass wrote:
> 
> > If 'Df', 'De' and 'Dr' are already (nearly?) in use, I think 'Dh' is the
> > more reasonable choice.  Unless there are objections, we'll start using
> > that.  Or do you think the DFP types are going to switch to 'u<letter>'?
> 
> No, let's just go with Dh; that seems simplest given where we are. 
> Scott, would you be so kind as to send in changes to the HTML document 
> to make that "official"?

No problem.  Here's a diff.  If I knew what the DFP sizes were, I'd put
them in as well.

--- /tmp/abi-orig.html	2008-06-11 16:13:17.000000000 +0100
+++ /tmp/abi.html	2008-06-11 16:22:57.000000000 +0100
@@ -4239,6 +4239,10 @@
 		 ::= e	# long double, __float80
 		 ::= g	# __float128
 		 ::= z	# ellipsis
+		 ::= De	# IEEE 754r decimal floating point (size?)
+		 ::= Df	# IEEE 754r decimal floating point (size?)
+		 ::= Dh	# IEEE 754r half-precision floating point (16 bits)
+		 ::= Dr	# IEEE 754r decimal floating point (size?)
 		 ::= u &lt;source-name>	# vendor extended type
 
 </pre></font></code>
@@ -4969,6 +4973,11 @@
 is simply a identifying number.</p>
 
 <p>
+<font color=blue>[080614]</font>
+Add manglings for IEEE 754r decimal and half-precision floating point
types.
+</p>
+
+<p>
 <font color=blue>[071207]</font>
 Add mangling for rvalue references.
 </p>


-- 
IMPORTANT NOTICE: The contents of this email and any attachments are confidential and may also be privileged. If you are not the intended recipient, please notify the sender immediately and do not disclose the contents to any other person, use it for any purpose, or store or copy the information in any medium.  Thank you.




From mark at codesourcery.com  Wed Jun 11 16:51:03 2008
From: mark at codesourcery.com (Mark Mitchell)
Date: Wed, 11 Jun 2008 09:51:03 -0700
Subject: [cxx-abi-dev] IEEE 754r half-precision fp mangling?
In-Reply-To: <1213197880.32428.2525.camel@pc982.cambridge.arm.com>
References: <200806100216.TAA02985@hpcll183.cup.hp.com> <1213170514.32428.1922.camel@pc982.cambridge.arm.com> <484FE7E0.8070808@codesourcery.com> <1213197880.32428.2525.camel@pc982.cambridge.arm.com>
Message-ID: <48500277.4010706@codesourcery.com>

scott douglass wrote:

> --- /tmp/abi-orig.html	2008-06-11 16:13:17.000000000 +0100
> +++ /tmp/abi.html	2008-06-11 16:22:57.000000000 +0100
> @@ -4239,6 +4239,10 @@
>  		 ::= e	# long double, __float80
>  		 ::= g	# __float128
>  		 ::= z	# ellipsis
> +		 ::= De	# IEEE 754r decimal floating point (size?)
> +		 ::= Df	# IEEE 754r decimal floating point (size?)
> +		 ::= Dh	# IEEE 754r half-precision floating point (16 bits)
> +		 ::= Dr	# IEEE 754r decimal floating point (size?)
>  		 ::= u &lt;source-name>	# vendor extended type

DFP folks: would one of you please fill in proper names for the DFP 
mangling types?  And then I'll check in this change.

Thanks,

-- 
Mark Mitchell
CodeSourcery
mark at codesourcery.com
(650) 331-3385 x713


From premanand.rao at hp.com  Wed Jun 11 22:53:37 2008
From: premanand.rao at hp.com (PremAnand M Rao)
Date: Wed, 11 Jun 2008 18:53:37 -0400
Subject: [cxx-abi-dev] IEEE 754r half-precision fp mangling?
In-Reply-To: <48500277.4010706@codesourcery.com>
References: <200806100216.TAA02985@hpcll183.cup.hp.com> <1213170514.32428.1922.camel@pc982.cambridge.arm.com> <484FE7E0.8070808@codesourcery.com> <1213197880.32428.2525.camel@pc982.cambridge.arm.com> <48500277.4010706@codesourcery.com>
Message-ID: <48505771.7040407@hp.com>

Mark Mitchell wrote:
> scott douglass wrote:
> 
>> --- /tmp/abi-orig.html        2008-06-11 16:13:17.000000000 +0100
>> +++ /tmp/abi.html     2008-06-11 16:22:57.000000000 +0100
>> @@ -4239,6 +4239,10 @@
>>                ::= e  # long double, __float80
>>                ::= g  # __float128
>>                ::= z  # ellipsis
>> +              ::= De # IEEE 754r decimal floating point (size?)
>> +              ::= Df # IEEE 754r decimal floating point (size?)
>> +              ::= Dh # IEEE 754r half-precision floating point (16 bits)
>> +              ::= Dr # IEEE 754r decimal floating point (size?)
>>                ::= u &lt;source-name> # vendor extended type
> 
> DFP folks: would one of you please fill in proper names for the DFP
> mangling types?  And then I'll check in this change.

I think there is an error in the above, there should not be both a "De" 
and a "Dr".  I believe Michael suggested "Dr" for 128-bits decimal 
float, but Dennis and Daveed expressed a preference for "De" (instead of 
"Dr") to match the binary floating point mangling.  Unless Michael 
really wants "Dr" (instead of "De"), I believe the above table should be 
corrected with:

Df # IEEE 754r decimal floating point (32 bits)
Dd # IEEE 754r decimal floating point (64 bits)
De # IEEE 754r decimal floating point (128 bits)

and of course, Dh as Scott has correctly added.

PremAnand.


From premanand.rao at hp.com  Wed Jun 11 23:11:52 2008
From: premanand.rao at hp.com (PremAnand M Rao)
Date: Wed, 11 Jun 2008 19:11:52 -0400
Subject: [cxx-abi-dev] IEEE 754r half-precision fp mangling?
In-Reply-To: <48505771.7040407@hp.com>
References: <200806100216.TAA02985@hpcll183.cup.hp.com> <1213170514.32428.1922.camel@pc982.cambridge.arm.com> <484FE7E0.8070808@codesourcery.com> <1213197880.32428.2525.camel@pc982.cambridge.arm.com> <48500277.4010706@codesourcery.com> <48505771.7040407@hp.com>
Message-ID: <48505BB8.2060102@hp.com>

Rao, Premanand ("C and C++ Compilers, Nashua") wrote:
> Mark Mitchell wrote:
>> scott douglass wrote:
>>
>>> --- /tmp/abi-orig.html        2008-06-11 16:13:17.000000000 +0100
>>> +++ /tmp/abi.html     2008-06-11 16:22:57.000000000 +0100
>>> @@ -4239,6 +4239,10 @@
>>>                ::= e  # long double, __float80
>>>                ::= g  # __float128
>>>                ::= z  # ellipsis
>>> +              ::= De # IEEE 754r decimal floating point (size?)
>>> +              ::= Df # IEEE 754r decimal floating point (size?)
>>> +              ::= Dh # IEEE 754r half-precision floating point (16 bits)
>>> +              ::= Dr # IEEE 754r decimal floating point (size?)
>>>                ::= u &lt;source-name> # vendor extended type
>> DFP folks: would one of you please fill in proper names for the DFP
>> mangling types?  And then I'll check in this change.
> 
> I think there is an error in the above, there should not be both a "De"
> and a "Dr".  I believe Michael suggested "Dr" for 128-bits decimal
> float, but Dennis and Daveed expressed a preference for "De" (instead of
> "Dr") to match the binary floating point mangling.  Unless Michael
> really wants "Dr" (instead of "De"), I believe the above table should be
> corrected with:
> 
> Df # IEEE 754r decimal floating point (32 bits)
> Dd # IEEE 754r decimal floating point (64 bits)
> De # IEEE 754r decimal floating point (128 bits)
> 
> and of course, Dh as Scott has correctly added.
> 
> PremAnand.

And I would also like to ask again the opinion of all on the list if 
"Dh" really is appropriate for the half-precision floating point types. 
  I ask, because I think the half-precision floating point type is a 
binary floating point type whereas the other "D[fde]" types are decimal 
floating point types.

PremAnand.


From dhandly at cup.hp.com  Thu Jun 12 02:33:46 2008
From: dhandly at cup.hp.com (Dennis Handly)
Date: Wed, 11 Jun 2008 19:33:46 -0700 (PDT)
Subject: [cxx-abi-dev] IEEE 754r half-precision fp mangling?
Message-ID: <200806120233.TAA13003@hpcll183.cup.hp.com>

>From: scott douglass <scott.douglass at arm.com>
>If 'Df', 'De' and 'Dr' are already (nearly?) in use, I think 'Dh' is the
>more reasonable choice.  Unless there are objections, we'll start using
>that.

Ok.

>From: Mark Mitchell <mark at codesourcery.com>
>No, let's just go with Dh; that seems simplest given where we are. 

Similar for those char16_t & char32_t ones?

>From: scott douglass <scott.douglass at arm.com>
>If I knew what the DFP sizes were, I'd put them in as well.

Do we have any rationale or foot notes why we chose "D"?
And for demanglers to caution in that D0 ... D2 is used for function names?

>From: Mark Mitchell <mark at codesourcery.com>
>DFP folks: would one of you please fill in proper names for the DFP 
>mangling types?

>From: PremAnand M Rao <premanand.rao at hp.com>
>> +              ::= De # IEEE 754r decimal floating point (size?)
>> +              ::= Df # IEEE 754r decimal floating point (size?)
>> +              ::= Dh # IEEE 754r half-precision floating point (16 bits)
>> +              ::= Dr # IEEE 754r decimal floating point (size?)

>I think there is an error in the above, there should not be both a "De" 
>and a "Dr".  I believe Michael suggested "Dr" for 128-bits decimal 
>float, but Dennis and Daveed expressed a preference for "De" (instead of 
>"Dr") to match the binary floating point mangling.

I just copied Dr from a previous (wrong?) message.

>I believe the above table should be corrected with:
>Df # IEEE 754r decimal floating point (32 bits)
>Dd # IEEE 754r decimal floating point (64 bits)
>De # IEEE 754r decimal floating point (128 bits)
PremAnand.

And their C names are: _Decimal32, _Decimal64, _Decimal128, 

>From: PremAnand M Rao <premanand.rao at hp.com>
>And I would also like to ask again the opinion of all on the list if 
>"Dh" really is appropriate for the half-precision floating point types. 

We are using "D" as an extension letter, it doesn't really mean "decimal"
anymore.  :-)

>half-precision floating point type is a binary floating point type whereas
>the other "D[fde]" types are decimal floating point types.
PremAnand.

That's correct but we have recently gotten requests for 6 new types and
rather than waste single letters, my suggestion was just use "D" for
a "family" of 2*26 more builtin types.


From premanand.rao at hp.com  Thu Jun 12 08:40:33 2008
From: premanand.rao at hp.com (PremAnand M Rao)
Date: Thu, 12 Jun 2008 04:40:33 -0400
Subject: [cxx-abi-dev] IEEE 754r half-precision fp mangling?
In-Reply-To: <200806120233.TAA13003@hpcll183.cup.hp.com>
References: <200806120233.TAA13003@hpcll183.cup.hp.com>
Message-ID: <4850E101.6040608@hp.com>

Dennis Handly wrote:
>> From: PremAnand M Rao <premanand.rao at hp.com>
>> And I would also like to ask again the opinion of all on the list if
>> "Dh" really is appropriate for the half-precision floating point types.
> 
> We are using "D" as an extension letter, it doesn't really mean "decimal"
> anymore.  :-)
> 
>> half-precision floating point type is a binary floating point type whereas
>> the other "D[fde]" types are decimal floating point types.
> PremAnand.
> 
> That's correct but we have recently gotten requests for 6 new types and
> rather than waste single letters, my suggestion was just use "D" for
> a "family" of 2*26 more builtin types.

Okay, I missed reading your earlier suggestion.  I guess I am fine with 
Scott's suggested wording, with my correction.

PremAnand.


