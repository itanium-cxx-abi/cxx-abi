From scshunt at csclub.uwaterloo.ca  Sun Jun  5 08:11:45 2011
From: scshunt at csclub.uwaterloo.ca (Sean Hunt)
Date: Sun, 05 Jun 2011 01:11:45 -0700
Subject: Literal operator functions with 'li<length, ID>'
Message-ID: <4DEB3A41.5040408@csclub.uwaterloo.ca>

Hi,

I don't know where to find the document to patch against, but I'd like 
to suggest that the line

		  ::= li <source-name>	# "" <source-name>

be added somewhere amongst the productions for <operator-name> in 5.1.3 
since it's not yet in the document.

Thanks,
Sean


From rjmccall at apple.com  Tue Jun 28 06:32:27 2011
From: rjmccall at apple.com (John McCall)
Date: Mon, 27 Jun 2011 23:32:27 -0700
Subject: Mangling enclosing template arguments used in the base of an
 unresolved-name
Message-ID: <C1CBD6D2-7FC5-4E62-B0A3-2DE1DC646F67@apple.com>

How should we mangle the reference to 'T' in the following example?
  template <class T> struct A {
    template <class U> auto foo(U &u) -> decltype(T::bar(u));
  };

The ABI says:
  Class template parameter references are mangled using the standard
  mangling for the actual parameter type, typically a substitution. Note that
  a template parameter reference is a substitution candidate, distinct from
  the type (or other substitutible entity) that is the actual parameter.

We can't mangle T as a <template-param> because it would look exactly
like U.  We can't mangle it as a <source-name> because we're required
to be alpha-invariant over template parameter names.  As far as I can tell,
the mangling grammar doesn't allow us to mangle it as the substituted
type.  So we have a problem, and there's a parallel problem if the base
of the <unresolved-name> is a template-id where the template name is a
template template parameter from an enclosing template.

In both cases the underlying template argument should be available
as a substitution.  I suggest adding a new production:
  <existing-substitution> ::= <substitution>
and then extending unresolved-type:
  <unresolved-type> ::= <existing-substitution> [ <template-args> ]
with the proviso that this production should only be used for enclosing
template template parameters.

John.


