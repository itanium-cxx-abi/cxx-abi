From daveed at edg.com  Fri Sep 18 22:15:14 2009
From: daveed at edg.com (David Vandevoorde)
Date: Fri, 18 Sep 2009 18:15:14 -0400
Subject: A mangling for std::nullptr_t
Message-ID: <4D54575D-22D2-4D53-860F-B41E6AF80850@edg.com>

C++0x defines a typedef std::nullptr_t which aliases a unique (but  
unnamed) fundamental type.  That type needs a mangling code.

How about "Dn"?  I.e., adding the production

	<builtin-type> ::= Dn

in the spec?

	Daveed



From dhandly at cup.hp.com  Sat Sep 19 00:36:44 2009
From: dhandly at cup.hp.com (Dennis Handly)
Date: Fri, 18 Sep 2009 17:36:44 -0700 (PDT)
Subject: [cxx-abi-dev] A mangling for std::nullptr_t
Message-ID: <200909190036.RAA09240@hpcll183.cup.hp.com>

>From: David Vandevoorde <daveed at edg.com>
>How about "Dn"?  I.e., adding the production
>	<builtin-type> ::= Dn

But what should the demangler print?  __nullptr_t_thingee  :-)


From daveed at edg.com  Sat Sep 19 00:59:48 2009
From: daveed at edg.com (David Vandevoorde)
Date: Fri, 18 Sep 2009 20:59:48 -0400
Subject: [cxx-abi-dev] A mangling for std::nullptr_t
In-Reply-To: <200909190036.RAA09240@hpcll183.cup.hp.com>
References: <200909190036.RAA09240@hpcll183.cup.hp.com>
Message-ID: <34365BF6-396C-4673-80CA-A26D450D93AF@edg.com>


On Sep 18, 2009, at 8:36 PM, Dennis Handly wrote:

>> From: David Vandevoorde <daveed at edg.com>
>> How about "Dn"?  I.e., adding the production
>> 	<builtin-type> ::= Dn
>
> But what should the demangler print?  __nullptr_t_thingee  :-)


decltype(nullptr) maybe, or std::nullptr_t (although the latter is  
typedef).

	Daveed



From dhandly at cup.hp.com  Sat Sep 19 01:58:41 2009
From: dhandly at cup.hp.com (Dennis Handly)
Date: Fri, 18 Sep 2009 18:58:41 -0700 (PDT)
Subject: [cxx-abi-dev] A mangling for std::nullptr_t
Message-ID: <200909190158.SAA09742@hpcll183.cup.hp.com>

>From: David Vandevoorde <daveed at edg.com>
>decltype(nullptr) maybe, or std::nullptr_t (although the latter is typedef).

Yes, that's why I didn't suggest the latter.


From jason at redhat.com  Mon Sep 21 16:01:54 2009
From: jason at redhat.com (Jason Merrill)
Date: Mon, 21 Sep 2009 12:01:54 -0400
Subject: [cxx-abi-dev] A mangling for std::nullptr_t
In-Reply-To: <200909190158.SAA09742@hpcll183.cup.hp.com>
References: <200909190158.SAA09742@hpcll183.cup.hp.com>
Message-ID: <4AB7A372.7090603@redhat.com>

On 09/18/2009 09:58 PM, Dennis Handly wrote:
>> From: David Vandevoorde<daveed at edg.com>
>> decltype(nullptr) maybe, or std::nullptr_t (although the latter is typedef).
>
> Yes, that's why I didn't suggest the latter.

That doesn't really seem like a problem to me.  The Dn mangling sounds good.

Jason



From crowl at google.com  Tue Sep 22 22:37:25 2009
From: crowl at google.com (Lawrence Crowl)
Date: Tue, 22 Sep 2009 15:37:25 -0700
Subject: [cxx-abi-dev] A mangling for std::nullptr_t
In-Reply-To: <4AB7A372.7090603@redhat.com>
References: <200909190158.SAA09742@hpcll183.cup.hp.com>
	 <4AB7A372.7090603@redhat.com>
Message-ID: <29bd08b70909221537t2c0c4c66i96e3c319ea9affa3@mail.gmail.com>

On 9/21/09, Jason Merrill <jason at redhat.com> wrote:
> On 09/18/2009 09:58 PM, Dennis Handly wrote:
> > > From: David Vandevoorde<daveed at edg.com>
> > > decltype(nullptr) maybe, or std::nullptr_t
> > > (although the latter is typedef).
> >
> > Yes, that's why I didn't suggest the latter.
>
> That doesn't really seem like a problem to me.  The Dn mangling
> sounds good.

Personally, I'd go with the decltype.  Following the standard can
rarely be wrong, even if it is ... odd.

-- 
Lawrence Crowl


From jason at redhat.com  Wed Sep 23 20:33:57 2009
From: jason at redhat.com (Jason Merrill)
Date: Wed, 23 Sep 2009 16:33:57 -0400
Subject: [cxx-abi-dev] Mangling C++0x Lambdas
In-Reply-To: <8B186783-6955-437B-8B47-C048BB14FAB2@edg.com>
References: <325117E2-DBE7-488C-B8C7-554A3B80F54E@edg.com>	 <24b520d20812151000n586ad5e4yee947efbaa43774e@mail.gmail.com>	 <29bd08b70812151202jb9e9d24n2f2816edde9a3055@mail.gmail.com> <24b520d20812151240j7d6dc575t8109cc7e4e446839@mail.gmail.com> <49491D36.6010308@cs.tamu.edu> <A63A5AAD-5ECC-4143-ABC7-57F908AEEF69@edg.com> <047E28BE-88E0-4ED1-8DCF-7319D0708662@edg.com> <20DEB312-E433-4847-9092-0208D3DD5660@edg.com> <30EE21E0-FDF6-471D-8A1E-180580BB75C1@edg.com> <49C27637.1090204@codesourcery.com> <04D69AFA-96FF-4612-98C2-072A562EB916@edg.com> <2DBA2615-6CD8-45FA-B146-81F9DD198CB7@edg.com> <167875D3-F9C9-4DD0-AFC5-522A881F99D9@edg.com> <8B186783-6955-437B-8B47-C048BB14FAB2@edg.com>
Message-ID: <4ABA8635.5040008@redhat.com>

Could we change the mangling of closures in default arguments to count 
from left to right like the mangling for function parameters that appear 
in late-specified return types?

Jason


From daveed at edg.com  Thu Sep 24 00:19:41 2009
From: daveed at edg.com (David Vandevoorde)
Date: Wed, 23 Sep 2009 20:19:41 -0400
Subject: [cxx-abi-dev] Mangling C++0x Lambdas
In-Reply-To: <4ABA8635.5040008@redhat.com>
References: <325117E2-DBE7-488C-B8C7-554A3B80F54E@edg.com>	 <24b520d20812151000n586ad5e4yee947efbaa43774e@mail.gmail.com>	 <29bd08b70812151202jb9e9d24n2f2816edde9a3055@mail.gmail.com> <24b520d20812151240j7d6dc575t8109cc7e4e446839@mail.gmail.com> <49491D36.6010308@cs.tamu.edu> <A63A5AAD-5ECC-4143-ABC7-57F908AEEF69@edg.com> <047E28BE-88E0-4ED1-8DCF-7319D0708662@edg.com> <20DEB312-E433-4847-9092-0208D3DD5660@edg.com> <30EE21E0-FDF6-471D-8A1E-180580BB75C1@edg.com> <49C27637.1090204@codesourcery.com> <04D69AFA-96FF-4612-98C2-072A562EB916@edg.com> <2DBA2615-6CD8-45FA-B146-81F9DD198CB7@edg.com> <167875D3-F9C9-4DD0-AFC5-522A881F99D9@edg.com> <8B186783-6955-437B-8B47-C048BB14FAB2@edg.com> <4ABA8635.5040008@redhat.com>
Message-ID: <53BA1F85-423B-4462-A0F0-5365450D9F41@edg.com>


On Sep 23, 2009, at 4:33 PM, Jason Merrill wrote:

> Could we change the mangling of closures in default arguments to  
> count from left to right like the mangling for function parameters  
> that appear in late-specified return types?


Unless there is a compelling reason to do so, we'd rather not: We have  
already shipped a version with the mangling as specified (and that  
mangling is a tiny bit more compact).

	Daveed



From jason at redhat.com  Thu Sep 24 04:10:57 2009
From: jason at redhat.com (Jason Merrill)
Date: Thu, 24 Sep 2009 00:10:57 -0400
Subject: [cxx-abi-dev] Mangling C++0x Lambdas
In-Reply-To: <53BA1F85-423B-4462-A0F0-5365450D9F41@edg.com>
References: <325117E2-DBE7-488C-B8C7-554A3B80F54E@edg.com>	 <24b520d20812151000n586ad5e4yee947efbaa43774e@mail.gmail.com>	 <29bd08b70812151202jb9e9d24n2f2816edde9a3055@mail.gmail.com> <24b520d20812151240j7d6dc575t8109cc7e4e446839@mail.gmail.com> <49491D36.6010308@cs.tamu.edu> <A63A5AAD-5ECC-4143-ABC7-57F908AEEF69@edg.com> <047E28BE-88E0-4ED1-8DCF-7319D0708662@edg.com> <20DEB312-E433-4847-9092-0208D3DD5660@edg.com> <30EE21E0-FDF6-471D-8A1E-180580BB75C1@edg.com> <49C27637.1090204@codesourcery.com> <04D69AFA-96FF-4612-98C2-072A562EB916@edg.com> <2DBA2615-6CD8-45FA-B146-81F9DD198CB7@edg.com> <167875D3-F9C9-4DD0-AFC5-522A881F99D9@edg.com> <8B186783-6955-437B-8B47-C048BB14FAB2@edg.com> <4ABA8635.5040008@redhat.com> <53BA1F85-423B-4462-A0F0-5365450D9F41@edg.com>
Message-ID: <4ABAF151.3000603@redhat.com>

On 09/23/2009 08:19 PM, David Vandevoorde wrote:
> Unless there is a compelling reason to do so, we'd rather not: We have
> already shipped a version with the mangling as specified

Ah, OK.

> (and that mangling is a tiny bit more compact).

How so?

Jason


From jason at redhat.com  Thu Sep 24 05:41:43 2009
From: jason at redhat.com (Jason Merrill)
Date: Thu, 24 Sep 2009 01:41:43 -0400
Subject: [cxx-abi-dev] Mangling C++0x Lambdas
In-Reply-To: <4ABAF151.3000603@redhat.com>
References: <325117E2-DBE7-488C-B8C7-554A3B80F54E@edg.com>	 <24b520d20812151000n586ad5e4yee947efbaa43774e@mail.gmail.com>	 <29bd08b70812151202jb9e9d24n2f2816edde9a3055@mail.gmail.com> <24b520d20812151240j7d6dc575t8109cc7e4e446839@mail.gmail.com> <49491D36.6010308@cs.tamu.edu> <A63A5AAD-5ECC-4143-ABC7-57F908AEEF69@edg.com> <047E28BE-88E0-4ED1-8DCF-7319D0708662@edg.com> <20DEB312-E433-4847-9092-0208D3DD5660@edg.com> <30EE21E0-FDF6-471D-8A1E-180580BB75C1@edg.com> <49C27637.1090204@codesourcery.com> <04D69AFA-96FF-4612-98C2-072A562EB916@edg.com> <2DBA2615-6CD8-45FA-B146-81F9DD198CB7@edg.com> <167875D3-F9C9-4DD0-AFC5-522A881F99D9@edg.com> <8B186783-6955-437B-8B47-C048BB14FAB2@edg.com> <4ABA8635.5040008@redhat.com> <53BA1F85-423B-4462-A0F0-5365450D9F41@edg.com> <4ABAF151.3000603@redhat.com>
Message-ID: <4ABB0697.7020209@redhat.com>

On 09/24/2009 12:10 AM, Jason Merrill wrote:
> On 09/23/2009 08:19 PM, David Vandevoorde wrote:
>> (and that mangling is a tiny bit more compact).
> How so?

Oh, I get it--because the last parm will have a default argument if any do.

Jason


From daveed at edg.com  Thu Sep 24 11:23:17 2009
From: daveed at edg.com (David Vandevoorde)
Date: Thu, 24 Sep 2009 07:23:17 -0400
Subject: [cxx-abi-dev] Mangling C++0x Lambdas
In-Reply-To: <4ABB0697.7020209@redhat.com>
References: <325117E2-DBE7-488C-B8C7-554A3B80F54E@edg.com>	 <24b520d20812151000n586ad5e4yee947efbaa43774e@mail.gmail.com>	 <29bd08b70812151202jb9e9d24n2f2816edde9a3055@mail.gmail.com> <24b520d20812151240j7d6dc575t8109cc7e4e446839@mail.gmail.com> <49491D36.6010308@cs.tamu.edu> <A63A5AAD-5ECC-4143-ABC7-57F908AEEF69@edg.com> <047E28BE-88E0-4ED1-8DCF-7319D0708662@edg.com> <20DEB312-E433-4847-9092-0208D3DD5660@edg.com> <30EE21E0-FDF6-471D-8A1E-180580BB75C1@edg.com> <49C27637.1090204@codesourcery.com> <04D69AFA-96FF-4612-98C2-072A562EB916@edg.com> <2DBA2615-6CD8-45FA-B146-81F9DD198CB7@edg.com> <167875D3-F9C9-4DD0-AFC5-522A881F99D9@edg.com> <8B186783-6955-437B-8B47-C048BB14FAB2@edg.com> <4ABA8635.5040008@redhat.com> <53BA1F85-423B-4462-A0F0-5365450D9F41@edg.com> <4ABAF151.3000603@redhat.com> <4ABB0697.7020209@redhat.com>
Message-ID: <5AE96124-72F2-4D6B-8E58-16395453A306@edg.com>

On Sep 24, 2009, at 1:41 AM, Jason Merrill wrote:

> On 09/24/2009 12:10 AM, Jason Merrill wrote:
>> On 09/23/2009 08:19 PM, David Vandevoorde wrote:
>>> (and that mangling is a tiny bit more compact).
>> How so?
>
> Oh, I get it--because the last parm will have a default argument if  
> any do.


Right.  (Although admittedly such situations are rare enough and lead  
to long names already, that saving a character here and there is  
probably not a big deal.)

	Daveed



